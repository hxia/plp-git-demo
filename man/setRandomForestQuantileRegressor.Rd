% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RandomForestQuantileRegressor.R
\name{setRandomForestQuantileRegressor}
\alias{setRandomForestQuantileRegressor}
\title{Create setting for RandomForestQuantileRegressor with python scikit-garden (skgarden.quantile.RandomForestQuantileRegressor)
#' @description
This creates a setting for fitting a RandomForestQuantileRegressor model.  You need skgarden python install.  To install this open your command line and type: conda install -c conda-forge scikit-garden}
\usage{
setRandomForestQuantileRegressor(
  nEstimators = c(100),
  criterion = "mse",
  maxFeatures = -1,
  maxDepth = 4,
  minSamplesSplit = 2,
  minSamplesLeaf = 1,
  minWeightFractionLeaf = 0,
  maxLeafNodes = NULL,
  bootstrap = TRUE,
  oobScore = FALSE,
  warmStart = FALSE,
  seed = NULL,
  quiet = F
)
}
\arguments{
\item{nEstimators}{(int default:100) The number of trees in the forest.}

\item{criterion}{(string default="mse")) The function to measure the quality of a split. Supported criteria are "mse" for the mean squared error, which is equal to variance reduction as feature selection criterion, and "mae" for the mean absolute error.}

\item{maxFeatures}{(int default: -1) The number of features to consider when looking for the best split.  If -1 then use sqrt of total number of features.}

\item{maxDepth}{(int default:4) The maximum depth of the tree. If None, then nodes are expanded until all leaves are pure or until all leaves contain less than minSamplesSplit samples.}

\item{minSamplesSplit}{An integer specifying min samples per tree split (complexity)}

\item{minSamplesLeaf}{An integer specifying min samples per leaf (complexity)}

\item{minWeightFractionLeaf}{Lookup}

\item{maxLeafNodes}{(int) Grow trees with maxLeafNodes in best-first fashion. Best nodes are defined as relative reduction in impurity. If None then unlimited number of leaf nodes.}

\item{bootstrap}{(boolean default:TRUE) Whether bootstrap samples are used when building trees.}

\item{oobScore}{(boolean default:FALSE) Whether to use out-of-bag samples to estimate the R^2 on unseen data.}

\item{warmStart}{(boolean default:FALSE) When set to True, reuse the solution of the previous call to fit and add more estimators to the ensemble, otherwise, just fit a whole new forest.}

\item{seed}{will add}

\item{quiet}{will add}
}
\description{
Create setting for RandomForestQuantileRegressor with python scikit-garden (skgarden.quantile.RandomForestQuantileRegressor)
#' @description
This creates a setting for fitting a RandomForestQuantileRegressor model.  You need skgarden python install.  To install this open your command line and type: conda install -c conda-forge scikit-garden
}
\details{
Pick the hyper-parameters you want to do a grid search for
}
\examples{
\dontrun{
rfQR <- setRandomForestQuantileRegressor(nEstimators =c(10,50,100),
 maxDepth=c(4,10,17), seed = 2)
}
}
